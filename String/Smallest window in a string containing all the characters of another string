//Hard
//using sliding window
class Solution
{
    //Function to find the smallest window in the string s consisting
    //of all the characters of string p.
    public static String smallestWindow(String s, String p)
    {
        // Your code here
        int n = s.length();
        if(p.length() > n){
            return "-1";
        }
        HashMap<Character,Integer> map = new HashMap<>();
        for(char ch : p.toCharArray()){
            map.put(ch,map.getOrDefault(ch,0) + 1);
        }
        int requiredCount = p.length();
        int i = 0;
        int j = 0;
        int minWindow = Integer.MAX_VALUE;
        int start_i = 0;
        // exploring window ke liye j use kiya hai
        while(j < n){
            char ch = s.charAt(j);
            if(map.getOrDefault(ch,0) > 0){
                requiredCount--;
            }
            map.put(ch,map.getOrDefault(ch,0) - 1);
            while(requiredCount == 0){
                // shrinking window keliye i variable use kiya hai
                int currWindow = j - i + 1;
                if(minWindow > currWindow){
                    minWindow = currWindow;
                    start_i = i;
                }
                char c = s.charAt(i);
                map.put(c,map.getOrDefault(c,0) + 1);
                if(map.getOrDefault(c,0) > 0){
                    requiredCount++;
                }
                i++;
            }
            j++;
        }
        return minWindow == Integer.MAX_VALUE ? "-1" : s.substring(start_i, start_i + minWindow);
    }
}
