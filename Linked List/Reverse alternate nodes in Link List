//Medium
class Solution
{
    public static void rearrange(Node odd)
    {
        // add your code here
        if(odd == null && odd.next == null && odd.next.next == null){
            return;
        }
        //Extracting the alternative nodes from second node
        Node oddstrt = odd;
        Node even = odd.next;
        Node evenstrt = even;
        while(odd != null && even != null && odd.next != null){
            odd.next = odd.next.next;
            if(even.next != null){
                even.next = even.next.next;
            }
            odd = odd.next;
            even = even.next;
        }
        //Reverse the extracted list
        Node prev = null;
        Node curr = evenstrt;
        Node next;
        while(curr != null){
            next = curr.next;
            curr.next = prev;
            prev = curr;
            curr = next;
        }
        //appending the extracted list to the end
        evenstrt = prev;
        odd = oddstrt;
        while(odd.next != null){
            odd = odd.next;
        }
        odd.next = evenstrt;
    }
}
