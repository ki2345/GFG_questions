//Medium
class Solution{
    //Function to add two numbers represented by linked list.
    static Node addTwoLists(Node first, Node second){
        // code here
        // return head of sum list
        Stack<Integer> st1 = new Stack<>();
        Stack<Integer> st2 = new Stack<>();
        while(first != null){
            st1.add(first.data);
            first = first.next;
        }
        while(second != null){
            st2.add(second.data);
            second = second.next;
        }
        int sum = 0;
        int carry = 0;
        Node res = null;
        Node newnode;
        while(!st1.isEmpty() || !st2.isEmpty()){
            if(!st1.isEmpty())
                sum += st1.pop();
            if(!st2.isEmpty())
                sum += st2.pop();
            sum += carry;
            carry = sum/10;
            newnode = new Node(sum % 10);
            newnode.next = res;
            res = newnode;
            sum = 0; 
        }
        //corner case if both numbers are of 3 digits, and sum is of 4 digits
        if(carry != 0){
            newnode = new Node(carry);
            newnode.next = res;
            res = newnode;
        }
        return res;
    }
}
