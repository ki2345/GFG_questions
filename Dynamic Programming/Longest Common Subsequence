//Medium
class Solution
{
    //Function to find the length of longest common subsequence in two strings.
    static int lcs(int x, int y, String s1, String s2)
    {
        // your code here
         int[][] dp = new int[s1.length()][s2.length()];
        for(int[] a : dp){
            Arrays.fill(a,-1);
        }
        return helper_lcs(s1, s2, 0, 0,dp);
    }
    public static int helper_lcs(String s1, String s2, int i, int j, int[][] dp){
        if(i == s1.length() || j == s2.length()){
            return 0;
        }
        if(dp[i][j] != -1)
            return dp[i][j];
        int ans = 0;
        if(s1.charAt(i) == s2.charAt(j)){
            ans = 1 + helper_lcs(s1, s2, i+1, j+1,dp);
        }
        else{
            int fs = helper_lcs(s1, s2, i+1, j,dp);
            int ss = helper_lcs(s1, s2, i, j+1,dp);
            ans = Math.max(fs, ss);
        }
        return dp[i][j] = ans;
    }
}
